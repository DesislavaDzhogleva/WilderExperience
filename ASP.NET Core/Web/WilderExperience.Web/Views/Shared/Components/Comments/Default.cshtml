@model IEnumerable<WilderExperience.Web.ViewModels.Comments.CommentViewModel>

@{
    ViewData["Title"] = "Default";
}

<div>
    <form asp-controller="Comments" asp-action="AddComment" method="post">
        <input type="hidden" name="ExperienceId" value="@Model.FirstOrDefault().ExperienceId" />
        <input type="hidden" name="ParentId" value="0" />
        <div>
            <label for="Content"></label>
            <textarea name="Content" id="Content" class="form-control"></textarea>
        </div>
        <div>
            <input type="submit" class="btn btn-primary" value="Add comment" />
        </div>
    </form>
</div>


@{
    async Task RenderComment(IEnumerable<WilderExperience.Web.ViewModels.Comments.CommentViewModel> comments)
    {
        @foreach (var comment in comments)
        {
            <div class="media">
                <img class="align-self-start mr-3" src="/img/avatar.jpg" alt="image">
                <div class="media-body">
                    <h5 class="mt-0">@comment.AuthorUsername</h5>
                    <div class="pull-right">
                        <h6 class="text-muted">@comment.CreatedOn</h6>
                        <button class="btn btn-info btn-link pull-right " data-toggle="collapse" data-target="#collapseExample@(comment.Id)" aria-expanded="false" aria-controls="collapseExample@(comment.Id)"> <i class="fa fa-reply"></i> Reply</button>

                    </div>
                    <p class="overflow-hidden wrap-fix" >@comment.Content</p>
                    <div class="children">
                        <div class="media">
                            <img class="align-self-start mr-3 dummy-image" src="/img/avatar.jpg" alt="image">

                        </div>
                        @{
                            var children = Model.Where(x => x.ParentId == comment.Id).OrderByDescending(x => x.CreatedOn).ToList();
                            if (children.Count() > 0)
                            {
                                RenderComment(children);
                            }
                        }
                    </div>
                    <div class="collapse" id="collapseExample@(comment.Id)">
                        <form asp-controller="Comments" asp-action="AddComment" method="post">
                            <input type="hidden" name="ExperienceId" value="@Model.FirstOrDefault().ExperienceId" />
                            <input type="hidden" name="ParentId" value="@comment.Id" />
                            <div>
                                <label for="Content"></label>
                                <textarea name="Content" id="Content" class="form-control"></textarea>
                            </div>
                            <div>
                                <input type="submit" class="btn btn-primary" value="Add comment" />
                            </div>
                        </form>
                    </div>
                </div>
            </div>
        }
    }
}
@{RenderComment(Model.Where(x => x.ParentId == 0).OrderByDescending(x=>x.CreatedOn));}

